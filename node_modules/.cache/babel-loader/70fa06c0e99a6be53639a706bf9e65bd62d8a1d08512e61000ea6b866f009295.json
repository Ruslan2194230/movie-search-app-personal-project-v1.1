{"ast":null,"code":"var _jsxFileName = \"/Users/new/Documents/PET-project`s/movie-search-app-personal-project-v1.1/src/pages/MovieDetails/MovieDetailsAdditionalInfo/MovieDetailsAdditionaInfoInterface/MovieDetailsCast/MovieDetailsCast.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n// import { getCastMovie } from \"services/getMovies\";\nimport { BASE_POSTER_URL, PLACEHOLDER } from \"utils/constants\";\nimport { CastImg, CastSpan, ListItem, StyledList } from \"./MovieDetailsCast.module\";\nimport { useGetCastMovieQuery } from \"services/getMoviesRTK\";\nimport { useError } from \"contexts/ErrorContext\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cast = () => {\n  _s();\n  var _data$cast;\n  const {\n    movieId\n  } = useParams();\n  const {\n    handleWarning\n  } = useError();\n  const {\n    data,\n    error,\n    isFetching\n  } = useGetCastMovieQuery(movieId);\n  const cast = (_data$cast = data === null || data === void 0 ? void 0 : data.cast) !== null && _data$cast !== void 0 ? _data$cast : [];\n  if (error) {\n    handleWarning(error);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledList, {\n    children: [isFetching && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this), cast && cast.map(({\n      id,\n      profile_path,\n      original_name,\n      character\n    }) => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(CastImg, {\n        src: `${profile_path ? BASE_POSTER_URL + profile_path : PLACEHOLDER + \"?text=\" + original_name}`,\n        alt: original_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(CastSpan, {\n          children: \" Actor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), \" \", original_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(CastSpan, {\n          children: \"Character:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), \" \", character]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Cast, \"4fOpOxkF62SArzyYOrT/IaAlyds=\", false, function () {\n  return [useParams, useError, useGetCastMovieQuery];\n});\n_c = Cast;\nvar _c;\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"names":["useParams","BASE_POSTER_URL","PLACEHOLDER","CastImg","CastSpan","ListItem","StyledList","useGetCastMovieQuery","useError","Loader","jsxDEV","_jsxDEV","Cast","_s","_data$cast","movieId","handleWarning","data","error","isFetching","cast","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","profile_path","original_name","character","src","alt","_c","$RefreshReg$"],"sources":["/Users/new/Documents/PET-project`s/movie-search-app-personal-project-v1.1/src/pages/MovieDetails/MovieDetailsAdditionalInfo/MovieDetailsAdditionaInfoInterface/MovieDetailsCast/MovieDetailsCast.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n// import { getCastMovie } from \"services/getMovies\";\nimport { BASE_POSTER_URL, PLACEHOLDER } from \"utils/constants\";\nimport {\n  CastImg,\n  CastSpan,\n  ListItem,\n  StyledList,\n} from \"./MovieDetailsCast.module\";\nimport { useGetCastMovieQuery } from \"services/getMoviesRTK\";\nimport { useError } from \"contexts/ErrorContext\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const { handleWarning } = useError();\n  const { data, error, isFetching } = useGetCastMovieQuery(movieId);\n\n  const cast = data?.cast ?? [];\n  if (error) {\n    handleWarning(error);\n  }\n  return (\n    <StyledList>\n      {isFetching && <Loader />}\n      {cast &&\n        cast.map(({ id, profile_path, original_name, character }) => (\n          <ListItem key={id}>\n            <CastImg\n              src={`${\n                profile_path\n                  ? BASE_POSTER_URL + profile_path\n                  : PLACEHOLDER + \"?text=\" + original_name\n              }`}\n              alt={original_name}\n            />\n            <p>\n              <CastSpan> Actor:</CastSpan> {original_name}\n            </p>\n            <p>\n              <CastSpan>Character:</CastSpan> {character}\n            </p>\n          </ListItem>\n        ))}\n    </StyledList>\n  );\n};\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C;AACA,SAASC,eAAe,EAAEC,WAAW,QAAQ,iBAAiB;AAC9D,SACEC,OAAO,EACPC,QAAQ,EACRC,QAAQ,EACRC,UAAU,QACL,2BAA2B;AAClC,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,MAAM,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,UAAA;EACxB,MAAM;IAAEC;EAAQ,CAAC,GAAGf,SAAS,CAAC,CAAC;EAC/B,MAAM;IAAEgB;EAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACpC,MAAM;IAAES,IAAI;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGZ,oBAAoB,CAACQ,OAAO,CAAC;EAEjE,MAAMK,IAAI,IAAAN,UAAA,GAAGG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,IAAI,cAAAN,UAAA,cAAAA,UAAA,GAAI,EAAE;EAC7B,IAAII,KAAK,EAAE;IACTF,aAAa,CAACE,KAAK,CAAC;EACtB;EACA,oBACEP,OAAA,CAACL,UAAU;IAAAe,QAAA,GACRF,UAAU,iBAAIR,OAAA,CAACF,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACxBL,IAAI,IACHA,IAAI,CAACM,GAAG,CAAC,CAAC;MAAEC,EAAE;MAAEC,YAAY;MAAEC,aAAa;MAAEC;IAAU,CAAC,kBACtDnB,OAAA,CAACN,QAAQ;MAAAgB,QAAA,gBACPV,OAAA,CAACR,OAAO;QACN4B,GAAG,EAAE,GACHH,YAAY,GACR3B,eAAe,GAAG2B,YAAY,GAC9B1B,WAAW,GAAG,QAAQ,GAAG2B,aAAa,EACzC;QACHG,GAAG,EAAEH;MAAc;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFd,OAAA;QAAAU,QAAA,gBACEV,OAAA,CAACP,QAAQ;UAAAiB,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,KAAC,EAACI,aAAa;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACJd,OAAA;QAAAU,QAAA,gBACEV,OAAA,CAACP,QAAQ;UAAAiB,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,KAAC,EAACK,SAAS;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA,GAdSE,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeP,CACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEjB,CAAC;AAACZ,EAAA,CAjCWD,IAAI;EAAA,QACKZ,SAAS,EACHQ,QAAQ,EACED,oBAAoB;AAAA;AAAA0B,EAAA,GAH7CrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}