{"ast":null,"code":"var _jsxFileName = \"/Users/new/Documents/PET-project`s/movie-search-app-personal-project-v1.1/src/pages/Movies/Movies.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovieByQuery } from \"services/getMovies\";\nimport { useError } from \"../../contexts/ErrorContext\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { PageNavButtonsWrapper } from \"components/Buttons/PageNavButtons/PageNavButtonsWrapper\";\nimport { Form } from \"./MoviesForm/MoviesForm\";\nimport { useGetMovieByQueryQuery } from \"services/getMoviesRTK\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  var _data$results, _data$total_pages, _data$total_results;\n  const [movies, setMovies] = useState([]);\n  const [totalPagesState, setTotalPagesState] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const { handleMinorError, handleWarning } = useError();\n  const currentPage = searchParams.get(\"page\") || \"1\";\n  const currentQuery = searchParams.get(\"query\");\n  const {\n    data\n  } = useGetMovieByQueryQuery(currentQuery, currentPage);\n  const results = (_data$results = data === null || data === void 0 ? void 0 : data.results) !== null && _data$results !== void 0 ? _data$results : [];\n  const total_pages = (_data$total_pages = data === null || data === void 0 ? void 0 : data.total_pages) !== null && _data$total_pages !== void 0 ? _data$total_pages : 0;\n  const total_results = (_data$total_results = data === null || data === void 0 ? void 0 : data.total_results) !== null && _data$total_results !== void 0 ? _data$total_results : 0;\n\n  // useEffect(() => {\n  //   const currentQuery = searchParams.get(\"query\");\n\n  //   if (!currentQuery) {\n  //     return;\n  //   }\n\n  //   const fetchMovieByQuery = async () => {\n  //     try {\n  //       const moviesByQueryResponse = await getMovieByQuery(\n  //         currentQuery,\n  //         currentPage\n  //       );\n  //       const { results, total_pages, total_results } = moviesByQueryResponse;\n  //       if (total_results === 0) {\n  //         handleWarning(\"Фильм не найден, пожалуйста введите другое название\");\n  //         return;\n  //       }\n  //       setTotalPagesState(total_pages);\n  //       setMovies(results);\n  //     } catch (error) {\n  //       handleMinorError(\"Failed to fetch movies. Please try again.\");\n  //     }\n  //   };\n\n  //   fetchMovieByQuery();\n  // }, [searchParams]);\n\n  // const handlePageChange = useCallback(\n  //   (newPage) => {\n  //     setSearchParams((prevParams) => ({\n  //       ...Object.fromEntries(prevParams),\n  //       page: newPage.toString(),\n  //     }));\n  //   },\n  //   [setSearchParams]\n  // );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      setSearchParams: setSearchParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(PageNavButtonsWrapper, {\n      movies: movies,\n      page: Number(searchParams.get(\"page\")) || 1,\n      totalPages: totalPagesState,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Movies, \"4Vi5jqdMO/swZMrwHNYFtzbP8Wg=\", false, function () {\n  return [useSearchParams, useGetMovieByQueryQuery];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useCallback","useEffect","useState","useSearchParams","getMovieByQuery","useError","MovieList","PageNavButtonsWrapper","Form","useGetMovieByQueryQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_s","_data$results","_data$total_pages","_data$total_results","movies","setMovies","totalPagesState","setTotalPagesState","searchParams","setSearchParams","currentPage","get","currentQuery","data","results","total_pages","total_results","children","fileName","_jsxFileName","lineNumber","columnNumber","length","page","Number","totalPages","handlePageChange","_c","$RefreshReg$"],"sources":["/Users/new/Documents/PET-project`s/movie-search-app-personal-project-v1.1/src/pages/Movies/Movies.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovieByQuery } from \"services/getMovies\";\n\nimport { useError } from \"../../contexts/ErrorContext\";\n\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { PageNavButtonsWrapper } from \"components/Buttons/PageNavButtons/PageNavButtonsWrapper\";\nimport { Form } from \"./MoviesForm/MoviesForm\";\nimport { useGetMovieByQueryQuery } from \"services/getMoviesRTK\";\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [totalPagesState, setTotalPagesState] = useState(0);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const { handleMinorError, handleWarning } = useError();\n  const currentPage = searchParams.get(\"page\") || \"1\";\n\n  const currentQuery = searchParams.get(\"query\");\n  const { data } = useGetMovieByQueryQuery(currentQuery, currentPage);\n  const results = data?.results ?? [];\n  const total_pages = data?.total_pages ?? 0;\n  const total_results = data?.total_results ?? 0;\n\n  // useEffect(() => {\n  //   const currentQuery = searchParams.get(\"query\");\n\n  //   if (!currentQuery) {\n  //     return;\n  //   }\n\n  //   const fetchMovieByQuery = async () => {\n  //     try {\n  //       const moviesByQueryResponse = await getMovieByQuery(\n  //         currentQuery,\n  //         currentPage\n  //       );\n  //       const { results, total_pages, total_results } = moviesByQueryResponse;\n  //       if (total_results === 0) {\n  //         handleWarning(\"Фильм не найден, пожалуйста введите другое название\");\n  //         return;\n  //       }\n  //       setTotalPagesState(total_pages);\n  //       setMovies(results);\n  //     } catch (error) {\n  //       handleMinorError(\"Failed to fetch movies. Please try again.\");\n  //     }\n  //   };\n\n  //   fetchMovieByQuery();\n  // }, [searchParams]);\n\n  // const handlePageChange = useCallback(\n  //   (newPage) => {\n  //     setSearchParams((prevParams) => ({\n  //       ...Object.fromEntries(prevParams),\n  //       page: newPage.toString(),\n  //     }));\n  //   },\n  //   [setSearchParams]\n  // );\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {movies.length > 0 && (\n        <PageNavButtonsWrapper\n          movies={movies}\n          page={Number(searchParams.get(\"page\")) || 1}\n          totalPages={totalPagesState}\n          handlePageChange={handlePageChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,eAAe,QAAQ,oBAAoB;AAEpD,SAASC,QAAQ,QAAQ,6BAA6B;AAEtD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,qBAAqB,QAAQ,yDAAyD;AAC/F,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,uBAAuB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAChE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,iBAAA,EAAAC,mBAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAEzD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,eAAe,CAAC,CAAC;EACzD;EACA,MAAMsB,WAAW,GAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG;EAEnD,MAAMC,YAAY,GAAGJ,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;EAC9C,MAAM;IAAEE;EAAK,CAAC,GAAGnB,uBAAuB,CAACkB,YAAY,EAAEF,WAAW,CAAC;EACnE,MAAMI,OAAO,IAAAb,aAAA,GAAGY,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,OAAO,cAAAb,aAAA,cAAAA,aAAA,GAAI,EAAE;EACnC,MAAMc,WAAW,IAAAb,iBAAA,GAAGW,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,WAAW,cAAAb,iBAAA,cAAAA,iBAAA,GAAI,CAAC;EAC1C,MAAMc,aAAa,IAAAb,mBAAA,GAAGU,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,aAAa,cAAAb,mBAAA,cAAAA,mBAAA,GAAI,CAAC;;EAE9C;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEP,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA,CAACH,IAAI;MAACgB,eAAe,EAAEA;IAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzCjB,MAAM,CAACkB,MAAM,GAAG,CAAC,iBAAI1B,OAAA,CAACL,SAAS;MAACa,MAAM,EAAEA;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClDjB,MAAM,CAACkB,MAAM,GAAG,CAAC,iBAChB1B,OAAA,CAACJ,qBAAqB;MACpBY,MAAM,EAAEA,MAAO;MACfmB,IAAI,EAAEC,MAAM,CAAChB,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAE;MAC5Cc,UAAU,EAAEnB,eAAgB;MAC5BoB,gBAAgB,EAAEA;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACF;EAAA,eACD,CAAC;AAEP,CAAC;AAACrB,EAAA,CAlEID,MAAM;EAAA,QAI8BX,eAAe,EAKtCM,uBAAuB;AAAA;AAAAiC,EAAA,GATpC5B,MAAM;AAoEZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}