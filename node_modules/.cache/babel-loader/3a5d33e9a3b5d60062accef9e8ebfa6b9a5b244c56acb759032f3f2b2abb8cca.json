{"ast":null,"code":"var _jsxFileName = \"/Users/new/Documents/PET-project`s/movie-search-app-personal-project-v1.1/src/pages/MovieDetails/MovieDetailsAdditionalInfo/MovieDetailsAdditionaInfoInterface/MovieDetailsReviews/MovieDetailsReviews.jsx\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviewsMovie } from \"services/getMovies\";\nimport { ReviewsListItem, ReviewsStyledList, ReviewsDescription, ReviewsListText, ReviewsListSpan } from \"./MovieDetailsReviews.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Reviews = () => {\n  // const { movieId } = useParams();\n  // const [reviews, setReviews] = useState([]);\n\n  // useEffect(() => {\n  //   const fetchReviews = async () => {\n  //     try {\n  //       const reviewsData = await getReviewsMovie(movieId);\n  //       setReviews(reviewsData);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   fetchReviews();\n  // }, [movieId]);\n  return reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"No Reviews.!!!!!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(ReviewsStyledList, {\n    children: reviews.map(({\n      id,\n      author,\n      content\n    }) => /*#__PURE__*/_jsxDEV(ReviewsListItem, {\n      children: [/*#__PURE__*/_jsxDEV(ReviewsListText, {\n        children: [/*#__PURE__*/_jsxDEV(ReviewsListSpan, {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), \" \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReviewsDescription, {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = Reviews;\nvar _c;\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["useEffect","useState","useParams","getReviewsMovie","ReviewsListItem","ReviewsStyledList","ReviewsDescription","ReviewsListText","ReviewsListSpan","jsxDEV","_jsxDEV","Reviews","reviews","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","author","content","_c","$RefreshReg$"],"sources":["/Users/new/Documents/PET-project`s/movie-search-app-personal-project-v1.1/src/pages/MovieDetails/MovieDetailsAdditionalInfo/MovieDetailsAdditionaInfoInterface/MovieDetailsReviews/MovieDetailsReviews.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviewsMovie } from \"services/getMovies\";\nimport {\n  ReviewsListItem,\n  ReviewsStyledList,\n  ReviewsDescription,\n  ReviewsListText,\n  ReviewsListSpan,\n} from \"./MovieDetailsReviews.styled\";\n\nexport const Reviews = () => {\n  // const { movieId } = useParams();\n  // const [reviews, setReviews] = useState([]);\n\n  // useEffect(() => {\n  //   const fetchReviews = async () => {\n  //     try {\n  //       const reviewsData = await getReviewsMovie(movieId);\n  //       setReviews(reviewsData);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   fetchReviews();\n  // }, [movieId]);\n  return reviews.length === 0 ? (\n    <h3>No Reviews.!!!!!!</h3>\n  ) : (\n    <ReviewsStyledList>\n      {reviews.map(({ id, author, content }) => (\n        <ReviewsListItem key={id}>\n          <ReviewsListText>\n            <ReviewsListSpan>Author:</ReviewsListSpan> {author}\n          </ReviewsListText>\n          <ReviewsDescription>{content}</ReviewsDescription>\n        </ReviewsListItem>\n      ))}\n    </ReviewsStyledList>\n  );\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SACEC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,EAClBC,eAAe,EACfC,eAAe,QACV,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAC3B;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,KAAK,CAAC,gBACzBH,OAAA;IAAAI,QAAA,EAAI;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,gBAE1BR,OAAA,CAACL,iBAAiB;IAAAS,QAAA,EACfF,OAAO,CAACO,GAAG,CAAC,CAAC;MAAEC,EAAE;MAAEC,MAAM;MAAEC;IAAQ,CAAC,kBACnCZ,OAAA,CAACN,eAAe;MAAAU,QAAA,gBACdJ,OAAA,CAACH,eAAe;QAAAO,QAAA,gBACdJ,OAAA,CAACF,eAAe;UAAAM,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC,KAAC,EAACG,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eAClBR,OAAA,CAACJ,kBAAkB;QAAAQ,QAAA,EAAEQ;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAAC;IAAA,GAJ9BE,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKP,CAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CACpB;AACH,CAAC;AAACK,EAAA,GA7BWZ,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}