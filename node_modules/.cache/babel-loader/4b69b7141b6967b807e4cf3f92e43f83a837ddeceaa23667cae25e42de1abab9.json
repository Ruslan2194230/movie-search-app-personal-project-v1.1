{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import storage from'redux-persist/lib/storage';import persistReducer from'redux-persist/es/persistReducer';// const favoriteMovieIdState =\n//   JSON.parse(localStorage.getItem('favorites')) || [];\nconst favoritesSliceInitState={favoriteMoviesid:[]};const favoritesSlice=createSlice({name:'favoriteMovies',initialState:favoritesSliceInitState,reducers:{addToFavorites:(state,action)=>{return{...state,favoriteMoviesid:[...state.favoriteMoviesid,action.payload]};// or with IMMER, mutable way\n// state.favoriteMoviesid.push(action.payload);\n},removeFromFavorites:(state,action)=>{state.favoriteMoviesid=state.favoriteMoviesid.filter(movieId=>movieId!==action.payload);// second way with usage IMMER, mutable way\n// const findIndex = state.favoriteMoviesid.indexOf(action.payload);\n// state.favoriteMoviesid.splice(findIndex, 1);\n}}});const persistConfig={key:'favorites-movies',storage};export const{setFavorites,addToFavorites,removeFromFavorites}=favoritesSlice.actions;export const favoriteReducer=persistReducer(persistConfig,favoritesSlice.reducer);","map":{"version":3,"names":["createSlice","storage","persistReducer","favoritesSliceInitState","favoriteMoviesid","favoritesSlice","name","initialState","reducers","addToFavorites","state","action","payload","removeFromFavorites","filter","movieId","persistConfig","key","setFavorites","actions","favoriteReducer","reducer"],"sources":["/Users/new/Documents/PET-project`s/movie-search-app-personal-project-v1.0/src/store/favorites/favorites.slices/favoritesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport storage from 'redux-persist/lib/storage';\nimport persistReducer from 'redux-persist/es/persistReducer';\n\n// const favoriteMovieIdState =\n//   JSON.parse(localStorage.getItem('favorites')) || [];\nconst favoritesSliceInitState = { favoriteMoviesid: [] };\n\nconst favoritesSlice = createSlice({\n  name: 'favoriteMovies',\n  initialState: favoritesSliceInitState,\n  reducers: {\n    addToFavorites: (state, action) => {\n      return {\n        ...state,\n        favoriteMoviesid: [...state.favoriteMoviesid, action.payload],\n      };\n      // or with IMMER, mutable way\n      // state.favoriteMoviesid.push(action.payload);\n    },\n    removeFromFavorites: (state, action) => {\n      state.favoriteMoviesid = state.favoriteMoviesid.filter(\n        movieId => movieId !== action.payload\n      );\n\n      // second way with usage IMMER, mutable way\n      // const findIndex = state.favoriteMoviesid.indexOf(action.payload);\n      // state.favoriteMoviesid.splice(findIndex, 1);\n    },\n  },\n});\n\nconst persistConfig = {\n  key: 'favorites-movies',\n  storage,\n};\n\nexport const { setFavorites, addToFavorites, removeFromFavorites } =\n  favoritesSlice.actions;\n\nexport const favoriteReducer = persistReducer(\n  persistConfig,\n  favoritesSlice.reducer\n);\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAC/C,MAAO,CAAAC,cAAc,KAAM,iCAAiC,CAE5D;AACA;AACA,KAAM,CAAAC,uBAAuB,CAAG,CAAEC,gBAAgB,CAAE,EAAG,CAAC,CAExD,KAAM,CAAAC,cAAc,CAAGL,WAAW,CAAC,CACjCM,IAAI,CAAE,gBAAgB,CACtBC,YAAY,CAAEJ,uBAAuB,CACrCK,QAAQ,CAAE,CACRC,cAAc,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACjC,MAAO,CACL,GAAGD,KAAK,CACRN,gBAAgB,CAAE,CAAC,GAAGM,KAAK,CAACN,gBAAgB,CAAEO,MAAM,CAACC,OAAO,CAC9D,CAAC,CACD;AACA;AACF,CAAC,CACDC,mBAAmB,CAAEA,CAACH,KAAK,CAAEC,MAAM,GAAK,CACtCD,KAAK,CAACN,gBAAgB,CAAGM,KAAK,CAACN,gBAAgB,CAACU,MAAM,CACpDC,OAAO,EAAIA,OAAO,GAAKJ,MAAM,CAACC,OAChC,CAAC,CAED;AACA;AACA;AACF,CACF,CACF,CAAC,CAAC,CAEF,KAAM,CAAAI,aAAa,CAAG,CACpBC,GAAG,CAAE,kBAAkB,CACvBhB,OACF,CAAC,CAED,MAAO,MAAM,CAAEiB,YAAY,CAAET,cAAc,CAAEI,mBAAoB,CAAC,CAChER,cAAc,CAACc,OAAO,CAExB,MAAO,MAAM,CAAAC,eAAe,CAAGlB,cAAc,CAC3Cc,aAAa,CACbX,cAAc,CAACgB,OACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}