{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport persistReducer from 'redux-persist/es/persistReducer';\n\n// const favoriteMovieIdState =\n//   JSON.parse(localStorage.getItem('favorites')) || [];\nconst favoritesSliceInitState = {\n  favoriteMoviesid: []\n};\nconst favoritesSlice = createSlice({\n  name: 'favoriteMovies',\n  initialState: favoritesSliceInitState,\n  reducers: {\n    addToFavorites: (state, action) => {\n      return {\n        ...state,\n        favoriteMoviesid: [...state.favoriteMoviesid, action.payload]\n      };\n      // or with IMMER, mutable way\n      // state.favoriteMoviesid.push(action.payload);\n    },\n    removeFromFavorites: (state, action) => {\n      state.favoriteMoviesid = state.favoriteMoviesid.filter(movieId => movieId !== action.payload);\n\n      // second way with usage IMMER, mutable way\n      // const findIndex = state.favoriteMoviesid.indexOf(action.payload);\n      // state.favoriteMoviesid.splice(findIndex, 1);\n    }\n  }\n});\nconst persistConfig = {\n  key: 'favorites-movies',\n  storage\n};\nexport const {\n  setFavorites,\n  addToFavorites,\n  removeFromFavorites\n} = favoritesSlice.actions;\nexport const favoriteReducer = persistReducer(persistConfig, favoritesSlice.reducer);","map":{"version":3,"names":["createSlice","storage","persistReducer","favoritesSliceInitState","favoriteMoviesid","favoritesSlice","name","initialState","reducers","addToFavorites","state","action","payload","removeFromFavorites","filter","movieId","persistConfig","key","setFavorites","actions","favoriteReducer","reducer"],"sources":["/Users/new/Documents/PET-project`s/movie-search-app-personal-project-v1.1/src/store/favorites/favorites.slices/favoritesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport storage from 'redux-persist/lib/storage';\nimport persistReducer from 'redux-persist/es/persistReducer';\n\n// const favoriteMovieIdState =\n//   JSON.parse(localStorage.getItem('favorites')) || [];\nconst favoritesSliceInitState = { favoriteMoviesid: [] };\n\nconst favoritesSlice = createSlice({\n  name: 'favoriteMovies',\n  initialState: favoritesSliceInitState,\n  reducers: {\n    addToFavorites: (state, action) => {\n      return {\n        ...state,\n        favoriteMoviesid: [...state.favoriteMoviesid, action.payload],\n      };\n      // or with IMMER, mutable way\n      // state.favoriteMoviesid.push(action.payload);\n    },\n    removeFromFavorites: (state, action) => {\n      state.favoriteMoviesid = state.favoriteMoviesid.filter(\n        movieId => movieId !== action.payload\n      );\n\n      // second way with usage IMMER, mutable way\n      // const findIndex = state.favoriteMoviesid.indexOf(action.payload);\n      // state.favoriteMoviesid.splice(findIndex, 1);\n    },\n  },\n});\n\nconst persistConfig = {\n  key: 'favorites-movies',\n  storage,\n};\n\nexport const { setFavorites, addToFavorites, removeFromFavorites } =\n  favoritesSlice.actions;\n\nexport const favoriteReducer = persistReducer(\n  persistConfig,\n  favoritesSlice.reducer\n);\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,cAAc,MAAM,iCAAiC;;AAE5D;AACA;AACA,MAAMC,uBAAuB,GAAG;EAAEC,gBAAgB,EAAE;AAAG,CAAC;AAExD,MAAMC,cAAc,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEJ,uBAAuB;EACrCK,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,OAAO;QACL,GAAGD,KAAK;QACRN,gBAAgB,EAAE,CAAC,GAAGM,KAAK,CAACN,gBAAgB,EAAEO,MAAM,CAACC,OAAO;MAC9D,CAAC;MACD;MACA;IACF,CAAC;IACDC,mBAAmB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACN,gBAAgB,GAAGM,KAAK,CAACN,gBAAgB,CAACU,MAAM,CACpDC,OAAO,IAAIA,OAAO,KAAKJ,MAAM,CAACC,OAChC,CAAC;;MAED;MACA;MACA;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAMI,aAAa,GAAG;EACpBC,GAAG,EAAE,kBAAkB;EACvBhB;AACF,CAAC;AAED,OAAO,MAAM;EAAEiB,YAAY;EAAET,cAAc;EAAEI;AAAoB,CAAC,GAChER,cAAc,CAACc,OAAO;AAExB,OAAO,MAAMC,eAAe,GAAGlB,cAAc,CAC3Cc,aAAa,EACbX,cAAc,CAACgB,OACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}