{"version":3,"file":"static/js/72.568bcd03.chunk.js","mappings":"mNAEO,MAAMA,EAAcC,EAAAA,EAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wnD,gCCA7B,MAAMC,EAAcJ,EAAAA,EAAOK,GAAEH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oNAYvBG,EAAoBN,EAAAA,EAAOO,IAAGC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iCAI9BM,EAAeT,EAAAA,EAAOU,IAAGC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oIAQzBS,EAAaZ,EAAAA,EAAOa,GAAEC,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kD,oBCxB5B,MAAMY,EAAiBf,EAAAA,EAAOgB,OAAMd,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oTAqB9Bc,EAAejB,EAAAA,EAAOkB,KAAIV,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4GAS1BgB,EAAcnB,EAAAA,EAAOoB,IAAGT,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2C,6CCtB9B,MAAMkB,EAAsBC,IAAa,IAAZ,GAAEC,GAAID,EACxC,MAAM,gBAAEE,EAAe,mBAAEC,GCLOC,MAChC,MAAMC,GAAWC,EAAAA,EAAAA,MAIjB,MAAO,CACLJ,gBAJsBD,GAAMI,GAASE,EAAAA,EAAAA,IAAeN,IAKpDE,mBAJyBF,GAAMI,GAASG,EAAAA,EAAAA,IAAoBP,IAK7D,EDH+CG,GAC1CK,GAAkBC,EAAAA,EAAAA,GAAcT,IAC/BU,EAAOC,IAAYC,EAAAA,EAAAA,aAE1BC,EAAAA,EAAAA,YAAU,KACRF,EAASH,EAAgB,GACxB,CAACA,IAaJ,OACEM,EAAAA,EAAAA,KAACtB,EAAc,CACbuB,QAbwBC,IAC1BA,EAAEC,kBACFD,EAAEE,iBACER,EACFR,EAAmBF,GAEnBC,EAAgBD,GAElBW,GAAUD,EAAM,EAMdS,UAAWT,EAAQ,WAAa,GAAGU,UAEnCN,EAAAA,EAAAA,KAACpB,EAAY,CAAA0B,UACXN,EAAAA,EAAAA,KAAClB,EAAW,CAACyB,QAAQ,YAAWD,UAC9BN,EAAAA,EAAAA,KAAA,QACEQ,EAAE,+LACFH,UAAU,eAID,EEhCRI,EAAYxB,IAA0B,IAAzB,MAAEyB,EAAK,SAAEC,GAAU1B,EAC3C,MAAM,GAAEC,EAAE,eAAE0B,EAAc,YAAEC,GAAgBH,EAE5C,OACEI,EAAAA,EAAAA,MAAC/C,EAAW,CAAAuC,SAAA,EACVN,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMN,GAAYO,GAAE,WAAAC,OAAajC,GAAKoB,UACnDQ,EAAAA,EAAAA,MAAC7C,EAAiB,CAAAqC,SAAA,EAChBN,EAAAA,EAAAA,KAAC5B,EAAY,CACXgD,IACEP,EACIQ,EAAAA,EAAkBR,EAClBS,EAAAA,EAAc,SAAWV,EAE/BW,IAAKX,KAEPZ,EAAAA,EAAAA,KAAChB,EAAmB,CAACE,GAAIA,UAG7Bc,EAAAA,EAAAA,KAACzB,EAAU,CAAA+B,SAAEM,MAdG1B,EAeJ,EC1BLsC,EAAYvC,IAAmC,IAAlC,OAAEwC,EAAM,iBAAEC,GAAkBzC,EACpD,MAAM0B,GAAWgB,EAAAA,EAAAA,MAEjB,OACE3B,EAAAA,EAAAA,KAACtC,EAAW,CAAA4C,SACTmB,EAAOG,KAAIlB,IACVV,EAAAA,EAAAA,KAACS,EAAS,CAERC,MAAOA,EACPC,SAAUA,EACVe,iBAAkBA,GAHbhB,EAAMxB,OAMH,C,0FCXlB,MAcA,EAda2C,KACX,MAAOJ,EAAQK,IAAahC,EAAAA,EAAAA,UAAS,IAKrC,OAHAC,EAAAA,EAAAA,YAAU,MACRgC,EAAAA,EAAAA,IAAkB,IAAIC,KAAKF,EAAU,GACpC,KAEDhB,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAA3B,SAAA,EACEN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,oBACJN,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CAACC,OAAQA,MAClB,C,oFCdPS,EAAAA,EAAMC,SAASC,QAAU,gCACzB,MAAMC,EAAU,mCAEHN,EAAoBO,UAC/B,IACE,MAAM,KAAEC,SAAeL,EAAAA,EAAMM,IAAI,+BAADrB,OAAgCkB,IAEhE,OAAOE,EAAKE,OACd,CAAE,MAAOC,GACPC,QAAQD,MAAM,kCAAmCA,EACnD,GAGWE,EAAkBN,MAAOO,EAAOC,KAC3C,IACE,MAAM,KAAEP,SAAeL,EAAAA,EAAMM,IAAI,wBAADrB,OACNkB,EAAO,WAAAlB,OAAU0B,EAAK,yBAAA1B,OAAwB2B,EAAI,yBAG5E,OAAOP,CACT,CAAE,MAAOG,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,GAGWK,EAAeT,UAC1B,IACE,MAAM,KAAEC,SAAeL,EAAAA,EAAMM,IAAI,SAADrB,OACrB6B,EAAO,aAAA7B,OAAYkB,EAAO,oBAGrC,OAAOE,CACT,CAAE,MAAOG,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,GAGWO,EAAeX,UAC1B,IACE,MAAM,KAAEC,SAAeL,EAAAA,EAAMM,IAAI,SAADrB,OACrB6B,EAAO,qBAAA7B,OAAoBkB,EAAO,oBAG7C,OAAOE,EAAKW,IACd,CAAE,MAAOR,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,GAEWS,EAAkBb,UAC7B,IACE,MAAM,KAAEC,SAAeL,EAAAA,EAAMM,IAAI,SAADrB,OACrB6B,EAAO,qBAAA7B,OAAoBkB,EAAO,oBAG7C,OAAOE,EAAKE,OACd,CAAE,MAAOC,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,E,uDCzDK,MAAMU,EAA0BA,KACrCC,EAAAA,EAAAA,KAAYrC,GAASA,EAAMsC,sBAAsBC,mBAEtC5D,EAAgBqD,GACJI,IAEDI,SAASR,E,0CCR1B,MAAM3B,EAAkB,mCAClBC,EAAc,qC","sources":["components/MovieList/MovieList.module.jsx","components/MovieList/MovieItem/MovieItem.styled.jsx","components/Buttons/ButtonAddToFavorite/ButtonAddToFavorite.styled.jsx","components/Buttons/ButtonAddToFavorite/ButtonAddToFavorite.jsx","store/favorites/favorites.actions.hooks/favorites.actions.hooks.js","components/MovieList/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/getMovies.js","store/favorites/favorites.selectors/favoritesSelectors.js","utils/constants.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieListUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  padding: 16px 0;\n  list-style: none;\n  margin: 0 auto;\n  max-width: calc(100vw - 32px); /* Учитываем отступы */\n\n  @media (max-width: 1440px) {\n    /* Показывать по 4 фильма в строку на компах */\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  // @media (max-width: 992px) {\n  //   /* Показывать по 2 фильма в строку на мобильных устройствах */\n  //   grid-template-columns: repeat(2, 1fr);\n  // }\n\n  @media (max-width: 1000px) {\n    /* Показывать по 2 фильма в строку на планшетах */\n    grid-template-columns: repeat(2, minmax(0, 350px));\n  }\n  @media (max-width: 425px) {\n    /* Показывать по 2 фильма в строку на планшетах */\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const MovieItemLi = styled.li`\n  position: relative;\n  overflow: hidden;\n  max-width: 100%;\n\n  height: auto;\n\n  padding: 12px;\n  border-radius: 12px;\n  border: 1.5px solid green;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\nexport const MovieImgContainer = styled.div`\n  position: relative;\n`;\n\nexport const MovieListimg = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n`;\n\nexport const MovieTitle = styled.h3`\n  font-size: 16px;\n  margin-top: 8px;\n`;\n","import styled from '@emotion/styled';\n\nexport const FavoriteButton = styled.button`\n  position: absolute;\n  bottom: -30px;\n  right: 0;\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  margin-top: 10px;\n\n  &.favorite svg path {\n    fill: #ffc700;\n    stroke: #ffc700;\n  }\n\n  &:not(.favorite) svg path {\n    fill: green;\n    stroke: green;\n  }\n`;\n\nexport const FavoriteIcon = styled.span`\n  width: 24px;\n  height: 24px;\n\n  // svg {\n  //   width: 24px;\n  //   height: 24px;\n  // }\n`;\nexport const FavoriteSvg = styled.svg`\n  width: 24px;\n  height: 24px;\n`;\n","import {\n  FavoriteButton,\n  FavoriteIcon,\n  FavoriteSvg,\n} from './ButtonAddToFavorite.styled';\nimport { useEffect, useState } from 'react';\n\nimport { useFavoriteActions } from 'store/favorites/favorites.actions.hooks/favorites.actions.hooks';\nimport { useIsFavorite } from 'store/favorites/favorites.selectors/favoritesSelectors';\n\nexport const ButtonAddToFavorite = ({ id }) => {\n  const { addFavoriteHook, removeFavoriteHook } = useFavoriteActions();\n  const isFavoriteMovie = useIsFavorite(id);\n  const [isFav, setIsFav] = useState();\n\n  useEffect(() => {\n    setIsFav(isFavoriteMovie);\n  }, [isFavoriteMovie]);\n\n  const handleFavoriteClick = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (isFav) {\n      removeFavoriteHook(id);\n    } else {\n      addFavoriteHook(id);\n    }\n    setIsFav(!isFav);\n  };\n\n  return (\n    <FavoriteButton\n      onClick={handleFavoriteClick}\n      className={isFav ? 'favorite' : ''}\n    >\n      <FavoriteIcon>\n        <FavoriteSvg viewBox=\"0 0 32 32\">\n          <path\n            d=\"M26,2H6A1,1,0,0,0,5,3V28a1,1,0,0,0,1.51.86L16,23.17l9.49,5.69A1,1,0,0,0,26,29a1,1,0,0,0,.49-.13A1,1,0,0,0,27,28V3A1,1,0,0,0,26,2ZM25,4V8H7V4ZM16.51,21.14a1,1,0,0,0-1,0L7,26.23V10H25V26.23Z\"\n            className=\"cls-1\"\n          />\n        </FavoriteSvg>\n      </FavoriteIcon>\n    </FavoriteButton>\n  );\n};\n\n////\n///\n///\n","import { useDispatch } from 'react-redux';\nimport {\n  addToFavorites,\n  removeFromFavorites,\n} from '../favorites.slices/favoritesSlice';\n\nexport const useFavoriteActions = () => {\n  const dispatch = useDispatch();\n  const addFavoriteHook = id => dispatch(addToFavorites(id));\n  const removeFavoriteHook = id => dispatch(removeFromFavorites(id));\n\n  return {\n    addFavoriteHook,\n    removeFavoriteHook,\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  MovieItemLi,\n  MovieListimg,\n  MovieTitle,\n  MovieImgContainer,\n} from './MovieItem.styled';\nimport { BASE_POSTER_URL, PLACEHOLDER } from 'utils/constants';\nimport { ButtonAddToFavorite } from 'components/Buttons/ButtonAddToFavorite/ButtonAddToFavorite';\n\nexport const MovieItem = ({ movie, location }) => {\n  const { id, original_title, poster_path } = movie;\n\n  return (\n    <MovieItemLi key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        <MovieImgContainer>\n          <MovieListimg\n            src={\n              poster_path\n                ? BASE_POSTER_URL + poster_path\n                : PLACEHOLDER + '?text=' + original_title\n            }\n            alt={original_title}\n          />\n          <ButtonAddToFavorite id={id} />\n        </MovieImgContainer>\n      </Link>\n      <MovieTitle>{original_title}</MovieTitle>\n    </MovieItemLi>\n  );\n};\n\n// export default MovieItem;\n","import { useLocation } from 'react-router-dom';\nimport { MovieListUl } from './MovieList.module';\nimport { MovieItem } from './MovieItem/MovieItem';\n\nexport const MovieList = ({ movies, onRemoveFavorite }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListUl>\n      {movies.map(movie => (\n        <MovieItem\n          key={movie.id}\n          movie={movie}\n          location={location}\n          onRemoveFavorite={onRemoveFavorite}\n        />\n      ))}\n    </MovieListUl>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { getTrendingMovies } from 'services/getMovies';\n\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies('').then(setMovies);\n  }, []);\n  return (\n    <>\n      <h1>Trending today</h1>\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n  }\n};\n\nexport const getMovieByQuery = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n    );\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie by query:', error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    // console.log('data', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie by id:', error);\n  }\n};\n\nexport const getCastMovie = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching cast movies:', error);\n  }\n};\nexport const getReviewsMovie = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching reviews movie:', error);\n  }\n};\n\n// ///\n// ///\n// ///\n// //\n","import { useSelector } from 'react-redux';\n\nexport const useSelectFavoriteMovies = () =>\n  useSelector(state => state.favoritesStoreReducer.favoriteMoviesid);\n\nexport const useIsFavorite = movieId => {\n  const favoriteMovies = useSelectFavoriteMovies();\n  // console.log('favoriteMovies in useIsFavorite', favoriteMovies);\n  return favoriteMovies.includes(movieId);\n};\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\n///\n//\n//\n"],"names":["MovieListUl","styled","ul","_templateObject","_taggedTemplateLiteral","MovieItemLi","li","MovieImgContainer","div","_templateObject2","MovieListimg","img","_templateObject3","MovieTitle","h3","_templateObject4","FavoriteButton","button","FavoriteIcon","span","FavoriteSvg","svg","ButtonAddToFavorite","_ref","id","addFavoriteHook","removeFavoriteHook","useFavoriteActions","dispatch","useDispatch","addToFavorites","removeFromFavorites","isFavoriteMovie","useIsFavorite","isFav","setIsFav","useState","useEffect","_jsx","onClick","e","stopPropagation","preventDefault","className","children","viewBox","d","MovieItem","movie","location","original_title","poster_path","_jsxs","Link","state","from","to","concat","src","BASE_POSTER_URL","PLACEHOLDER","alt","MovieList","movies","onRemoveFavorite","useLocation","map","Home","setMovies","getTrendingMovies","then","_Fragment","axios","defaults","baseURL","API_KEY","async","data","get","results","error","console","getMovieByQuery","query","page","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","useSelectFavoriteMovies","useSelector","favoritesStoreReducer","favoriteMoviesid","includes"],"sourceRoot":""}